{"question_id": 1533, "db_id": "debit_card_specializing", "question": "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.", "evidence": "August of 2012 refers to the Date value = '201208' ; Price per unit of product = Price / Amount;", "SQL": "SELECT\n  `T2`.`Consumption`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`Price` / `T1`.`Amount` > 29.00\n  AND `T1`.`ProductID` = 5\n  AND `T2`.`Date` = '201208'", "difficulty": "moderate"}
{"question_id": 1357, "db_id": "student_club", "question": "State the date Connor Hilton paid his/her dues.", "evidence": "Connor Hilton is the full name; full name refers to first_name, last_name; date the dues was paid refers to date_received where source = 'Dues';", "SQL": "SELECT\n  `T2`.`date_received`\nFROM `member` AS `T1`\nINNER JOIN `income` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`first_name` = 'Connor'\n  AND `T1`.`last_name` = 'Hilton'\n  AND `T2`.`source` = 'Dues'", "difficulty": "simple"}
{"question_id": 1432, "db_id": "student_club", "question": "Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club?", "evidence": "t_shirt_size = 'Medium' where position = 'Member'; percentage = DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100", "SQL": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`amount` = 50 THEN 1.0 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T2`.`income_id`)\nFROM `member` AS `T1`\nINNER JOIN `income` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`position` = 'Member' AND `T1`.`t_shirt_size` = 'Medium'", "difficulty": "moderate"}
{"question_id": 1150, "db_id": "thrombosis_prediction", "question": "What is the percentage of female patient were born after 1930?", "evidence": "female refers to Sex = 'F'; patient who were born after 1930 refers to year(Birthday) > '1930'; calculation = DIVIDE(COUNT(ID) where year(Birthday) > '1930' and SEX = 'F'), (COUNT(ID) where SEX = 'F')", "SQL": "SELECT\n  CAST(SUM(\n    CASE WHEN DATE_FORMAT(CAST(`Birthday` AS DATETIME), '%Y') > '1930' THEN 1 ELSE 0 END\n  ) AS DOUBLE) * 100 / COUNT(*)\nFROM `Patient`\nWHERE\n  `SEX` = 'F'", "difficulty": "moderate"}
{"question_id": 1155, "db_id": "thrombosis_prediction", "question": "List the patient ID, sex and birthday of patient with LDH beyond normal range.", "evidence": "LDH beyond normal range refers to LDH > '500';", "SQL": "SELECT DISTINCT\n  `T1`.`ID`,\n  `T1`.`SEX`,\n  `T1`.`Birthday`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`LDH` > 500", "difficulty": "simple"}
{"question_id": 1239, "db_id": "thrombosis_prediction", "question": "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.", "evidence": "age = SUBTRACT(year(current_timestamp), year(Birthday)); patient with two or more laboratory examinations refers to COUNT(ID) > 2; hematoclit level exceeded the normal range refers to HCT > = 52;", "SQL": "SELECT DISTINCT\n  `T1`.`ID`,\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y')\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`ID` IN (\n    SELECT\n      `ID`\n    FROM `Laboratory`\n    WHERE\n      `HCT` >= 52\n    GROUP BY\n      `ID`\n    HAVING\n      COUNT(`ID`) >= 2\n  )", "difficulty": "challenging"}
{"question_id": 1039, "db_id": "european_football_2", "question": "Find the average number of long-shot done by Ahmed Samir Farag.", "evidence": "average number of long shot = DIVIDE(SUM(long_shots), COUNT(player_fifa_api_id));", "SQL": "SELECT\n  CAST(SUM(`t2`.`long_shots`) AS DOUBLE) / COUNT(`t2`.`date`)\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t1`.`player_name` = 'Ahmed Samir Farag'", "difficulty": "simple"}
{"question_id": 912, "db_id": "formula_1", "question": "What's the reference name of Marina Bay Street Circuit?", "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'", "SQL": "SELECT\n  `circuitRef`\nFROM `circuits`\nWHERE\n  `name` = 'Marina Bay Street Circuit'", "difficulty": "simple"}
{"question_id": 1014, "db_id": "formula_1", "question": "Please list the lap records for the circuits in Italy.", "evidence": "lap record means the fastest time recorded which refers to time", "SQL": "WITH `fastest_lap_times` AS (\n  SELECT\n    `T1`.`raceId`,\n    `T1`.`FastestLapTime`,\n    (\n      CAST(SUBSTR(`T1`.`FastestLapTime`, 1, INSTR(`T1`.`FastestLapTime`, ':') - 1) AS DOUBLE) * 60\n    ) + (\n      CAST(SUBSTR(\n        `T1`.`FastestLapTime`,\n        INSTR(`T1`.`FastestLapTime`, ':') + 1,\n        INSTR(`T1`.`FastestLapTime`, '.') - INSTR(`T1`.`FastestLapTime`, ':') - 1\n      ) AS DOUBLE)\n    ) + (\n      CAST(SUBSTR(`T1`.`FastestLapTime`, INSTR(`T1`.`FastestLapTime`, '.') + 1) AS DOUBLE) / 1000\n    ) AS `time_in_seconds`\n  FROM `results` AS `T1`\n  WHERE\n    NOT `T1`.`FastestLapTime` IS NULL\n)\nSELECT\n  `T1`.`FastestLapTime` AS `lap_record`\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nINNER JOIN `circuits` AS `T3`\n  ON `T2`.`circuitId` = `T3`.`circuitId`\nINNER JOIN (\n  SELECT\n    MIN(`fastest_lap_times`.`time_in_seconds`) AS `min_time_in_seconds`\n  FROM `fastest_lap_times`\n  INNER JOIN `races` AS `T2`\n    ON `fastest_lap_times`.`raceId` = `T2`.`raceId`\n  INNER JOIN `circuits` AS `T3`\n    ON `T2`.`circuitId` = `T3`.`circuitId`\n  WHERE\n    `T3`.`country` = 'Italy'\n) AS `T4`\n  ON (\n    CAST(SUBSTR(`T1`.`FastestLapTime`, 1, INSTR(`T1`.`FastestLapTime`, ':') - 1) AS DOUBLE) * 60\n  ) + (\n    CAST(SUBSTR(\n      `T1`.`FastestLapTime`,\n      INSTR(`T1`.`FastestLapTime`, ':') + 1,\n      INSTR(`T1`.`FastestLapTime`, '.') - INSTR(`T1`.`FastestLapTime`, ':') - 1\n    ) AS DOUBLE)\n  ) + (\n    CAST(SUBSTR(`T1`.`FastestLapTime`, INSTR(`T1`.`FastestLapTime`, '.') + 1) AS DOUBLE) / 1000\n  ) = `T4`.`min_time_in_seconds`\nLIMIT 1", "difficulty": "challenging"}
{"question_id": 728, "db_id": "superhero", "question": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.", "evidence": "the superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; most common color refers to COUNT(superhero.id) DESC;", "SQL": "SELECT\n  `colour`.`colour` AS `EyeColor`,\n  COUNT(`superhero`.`id`) AS `Count`,\n  RANK() OVER (ORDER BY COUNT(`superhero`.`id`) DESC) AS `PopularityRank`\nFROM `superhero`\nINNER JOIN `colour`\n  ON `superhero`.`eye_colour_id` = `colour`.`id`\nINNER JOIN `publisher`\n  ON `superhero`.`publisher_id` = `publisher`.`id`\nWHERE\n  `publisher`.`publisher_name` = 'Marvel Comics'\nGROUP BY\n  `colour`.`colour`", "difficulty": "moderate"}
{"question_id": 750, "db_id": "superhero", "question": "What is the average weight of all female superheroes?", "evidence": "female refers to gender = 'Female'; average weight refers to AVG(weight_kg)", "SQL": "SELECT\n  AVG(`T1`.`weight_kg`)\nFROM `superhero` AS `T1`\nINNER JOIN `gender` AS `T2`\n  ON `T1`.`gender_id` = `T2`.`id`\nWHERE\n  `T2`.`gender` = 'Female'", "difficulty": "simple"}
{"question_id": 797, "db_id": "superhero", "question": "Which superheroes have blue eyes with brown hair?", "evidence": "which superheroes refers to superhero_name; blue eyes refers to color = 'Blue' and color.id = eye_colour_id; brown hair refers to color = 'Brown' and color.id = hair_colour_id;", "SQL": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`\nINNER JOIN `colour` AS `T3`\n  ON `T1`.`hair_colour_id` = `T3`.`id`\nWHERE\n  `T2`.`colour` = 'Blue' AND `T3`.`colour` = 'Brown'", "difficulty": "moderate"}
{"question_id": 825, "db_id": "superhero", "question": "Identify the gender of the superhero who has the ability of Phoenix Force.", "evidence": "ability of Phoenix Force refers to power_name = 'Phoenix Force';", "SQL": "SELECT\n  `T4`.`gender`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T2`.`power_id` = `T3`.`id`\nINNER JOIN `gender` AS `T4`\n  ON `T1`.`gender_id` = `T4`.`id`\nWHERE\n  `T3`.`power_name` = 'Phoenix Force'", "difficulty": "moderate"}
{"question_id": 531, "db_id": "codebase_community", "question": "Which user has a higher reputation, Harlan or Jarrod Dixon?", "evidence": "\"Harlan\" and \"Jarrod Dixon\" are both DisplayName; highest reputation refers to Max(Reputation)", "SQL": "SELECT\n  `DisplayName`\nFROM `users`\nWHERE\n  `DisplayName` IN ('Harlan', 'Jarrod Dixon')\n  AND `Reputation` = (\n    SELECT\n      MAX(`Reputation`)\n    FROM `users`\n    WHERE\n      `DisplayName` IN ('Harlan', 'Jarrod Dixon')\n  )", "difficulty": "simple"}
{"question_id": 576, "db_id": "codebase_community", "question": "Name the user that commented 'thank you user93!'", "evidence": "\"thank you user93\" is the Text of comment; user refers to DisplayName", "SQL": "SELECT\n  `T1`.`DisplayName`\nFROM `users` AS `T1`\nINNER JOIN `comments` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nWHERE\n  `T2`.`Text` = 'thank you user93!'", "difficulty": "simple"}
{"question_id": 604, "db_id": "codebase_community", "question": "What is the average of the up votes and the average user age for users creating more than 10 posts?", "evidence": "creating more than 10 post refers to Count (UserId) > 10; average of the up votes = Divide (Sum(UpVotes), Count (UserId)); average age = Divide (Sum(Age), Count(UserId))", "SQL": "SELECT\n  AVG(`T1`.`UpVotes`),\n  AVG(`T1`.`Age`)\nFROM `users` AS `T1`\nINNER JOIN (\n  SELECT\n    `OwnerUserId`,\n    COUNT(*) AS `post_count`\n  FROM `posts`\n  GROUP BY\n    `OwnerUserId`\n  HAVING\n    `post_count` > 10\n) AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`", "difficulty": "moderate"}
{"question_id": 685, "db_id": "codebase_community", "question": "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.", "evidence": "total views refer to ViewCount; Name the user refers to DisplayName; post 'Computer Game Datasets' refers to Text = 'Computer Game Datasets';", "SQL": "SELECT\n  `T2`.`ViewCount`,\n  `T3`.`DisplayName`\nFROM `postHistory` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`PostId` = `T2`.`Id`\nINNER JOIN `users` AS `T3`\n  ON `T2`.`LastEditorUserId` = `T3`.`Id`\nWHERE\n  `T1`.`Text` = 'Computer Game Datasets'", "difficulty": "moderate"}
{"question_id": 344, "db_id": "card_games", "question": "List all the mythic rarity print cards banned in gladiator format.", "evidence": "mythic rarity printing refers to rarity = 'mythic'; card banned refers to status = 'Banned'; in gladiator format refers to format = 'gladiator';", "SQL": "SELECT DISTINCT\n  `T1`.`id`\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T2`.`format` = 'gladiator'\n  AND `T2`.`status` = 'Banned'\n  AND `T1`.`rarity` = 'mythic'", "difficulty": "moderate"}
{"question_id": 402, "db_id": "card_games", "question": "What is the percentage of Story Spotlight cards that do not have a text box? List them by their ID.", "evidence": "Story Spotlight cards that do not have a text box refers to isStorySpotlight = 1 and isTextless = 0; Percentage = DIVIDE(SUM(count(id) where isStorylight = 1 AND isTextless = 0 ), SUM(count(id))) * 100", "SQL": "SELECT\n  CAST(SUM(CASE WHEN `isTextless` = 0  AND `isStorySpotlight` = 1 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`id`)\nFROM `cards`", "difficulty": "moderate"}
{"question_id": 405, "db_id": "card_games", "question": "How many Brazilian Portuguese translated sets are inside the Commander block?", "evidence": "Commander block refer to block = 'Commander'; sets refer to code = setCode; Portuguese refer to language = 'Portuguese (Brasil)'", "SQL": "SELECT\n  COUNT(`T1`.`id`)\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T1`.`code` = `T2`.`setCode`\nWHERE\n  `T2`.`language` = 'Portuguese (Brazil)' AND `T1`.`block` = 'Commander'", "difficulty": "moderate"}
{"question_id": 422, "db_id": "card_games", "question": "What is the language of the card with the multiverse number 149934?", "evidence": "multiverse number 149934 refers to multiverseid = 149934;", "SQL": "SELECT\n  `language`\nFROM `foreign_data`\nWHERE\n  `multiverseid` = 149934", "difficulty": "simple"}
{"question_id": 468, "db_id": "card_games", "question": "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?", "evidence": "Eighth Edition is the name of card set which refers to name = 'Eighth Edition'; Simplified Chinese refers to language = 'Chinese Simplified'; translation of the name refers to translation", "SQL": "SELECT\n  `T2`.`translation`\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T2`.`setCode` = `T1`.`code`\nWHERE\n  `T1`.`name` = 'Eighth Edition' AND `T2`.`language` = 'Chinese Simplified'", "difficulty": "moderate"}
{"question_id": 480, "db_id": "card_games", "question": "What is the Italian flavor text of the card \"Ancestor's Chosen\"?", "evidence": "Italian refers to language = 'Italian'; flavor text refers to flavorText; \"Ancestor''s Chosen\" refers to name = 'Ancestor''s Chosen'", "SQL": "SELECT\n  `T2`.`flavorText`\nFROM `cards` AS `T1`\nINNER JOIN `foreign_data` AS `T2`\n  ON `T2`.`uuid` = `T1`.`uuid`\nWHERE\n  `T1`.`name` = 'Ancestor''s Chosen' AND `T2`.`language` = 'Italian'", "difficulty": "moderate"}
{"question_id": 528, "db_id": "card_games", "question": "List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.", "evidence": "the set Hour of Devastation refers to set.name = 'Hour of Devastation'; names of all the cards in the set refers to cards.name; legal cards refers to status = 'Legal'; the formats refers to format", "SQL": "SELECT DISTINCT\n  `T2`.`name`,\n  CASE WHEN `T1`.`status` = 'Legal' THEN `T1`.`format` ELSE NULL END\nFROM `legalities` AS `T1`\nINNER JOIN `cards` AS `T2`\n  ON `T2`.`uuid` = `T1`.`uuid`\nWHERE\n  `T2`.`setCode` IN (\n    SELECT\n      `code`\n    FROM `sets`\n    WHERE\n      `name` = 'Hour of Devastation'\n  )", "difficulty": "challenging"}
{"question_id": 195, "db_id": "toxicology", "question": "What is the most common bond type?", "evidence": "most common bond type refers MAX(COUNT(bond_type))", "SQL": "SELECT\n  `T`.`bond_type`\nFROM (\n  SELECT\n    `bond_type`,\n    COUNT(`bond_id`)\n  FROM `bond`\n  GROUP BY\n    `bond_type`\n  ORDER BY\n    COUNT(`bond_id`) DESC\n  LIMIT 1\n) AS `T`", "difficulty": "simple"}
{"question_id": 200, "db_id": "toxicology", "question": "Find the triple-bonded molecules which are carcinogenic.", "evidence": "triple-bonded molecules refers to bond_type = '#'; carcinogenic refers to label = '+'", "SQL": "SELECT DISTINCT\n  `T2`.`molecule_id`\nFROM `bond` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T1`.`bond_type` = '#' AND `T2`.`label` = '+'", "difficulty": "simple"}
{"question_id": 201, "db_id": "toxicology", "question": "What is the percentage of carbon in double-bond molecules?", "evidence": "carbon refers to element = 'c'; double-bond molecules refers to bond_type = '='; percentage = DIVIDE(SUM(element = 'c'), COUNT(atom_id))", "SQL": "SELECT\n  CAST(COUNT(DISTINCT CASE WHEN `T1`.`element` = 'c' THEN `T1`.`atom_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(DISTINCT `T1`.`atom_id`)\nFROM `atom` AS `T1`\nINNER JOIN `bond` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T2`.`bond_type` = '='", "difficulty": "moderate"}
{"question_id": 207, "db_id": "toxicology", "question": "What elements are in a double type bond?", "evidence": "double type bond refers to bond_type = '=';", "SQL": "SELECT DISTINCT\n  `T1`.`element`\nFROM `atom` AS `T1`\nINNER JOIN `bond` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nINNER JOIN `connected` AS `T3`\n  ON `T1`.`atom_id` = `T3`.`atom_id`\nWHERE\n  `T2`.`bond_type` = '='", "difficulty": "challenging"}
{"question_id": 208, "db_id": "toxicology", "question": "Which type of label is the most numerous in atoms with hydrogen?", "evidence": "with hydrogen refers to element = 'h'; label most numerous in atoms refers to MAX(COUNT(label)); ", "SQL": "SELECT\n  `T`.`label`\nFROM (\n  SELECT\n    `T2`.`label`,\n    COUNT(`T2`.`molecule_id`)\n  FROM `atom` AS `T1`\n  INNER JOIN `molecule` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  WHERE\n    `T1`.`element` = 'h'\n  GROUP BY\n    `T2`.`label`\n  ORDER BY\n    COUNT(`T2`.`molecule_id`) DESC\n  LIMIT 1\n) AS `t`", "difficulty": "moderate"}
{"question_id": 213, "db_id": "toxicology", "question": "What type of bond is there between the atoms TR004_8 and TR004_20?", "evidence": "type of bond refers to bond_type; between the atoms TR004_8 and TR004_20 refers to atom_id = 'TR004_8' AND atom_id2 = 'TR004_20' OR another way around", "SQL": "SELECT\n  `T1`.`bond_type`\nFROM `bond` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`bond_id` = `T2`.`bond_id`\nWHERE\n  `T2`.`atom_id` = 'TR004_8'\n  AND `T2`.`atom_id2` = 'TR004_20'\n  OR `T2`.`atom_id2` = 'TR004_8'\n  AND `T2`.`atom_id` = 'TR004_20'", "difficulty": "moderate"}
{"question_id": 220, "db_id": "toxicology", "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.", "evidence": "TR000 is the molecule id;", "SQL": "SELECT DISTINCT\n  `T`.`element`\nFROM `atom` AS `T`\nWHERE\n  `T`.`molecule_id` = 'TR000'\nORDER BY\n  `T`.`element`\nLIMIT 3", "difficulty": "challenging"}
{"question_id": 227, "db_id": "toxicology", "question": "What is the percentage of molecules that are carcinogenic? Please provide your answer as a percentage with three decimal places.", "evidence": "label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) as percent", "SQL": "SELECT\n  ROUND(\n    CAST(COUNT(CASE WHEN `T`.`label` = '+' THEN `T`.`molecule_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T`.`molecule_id`),\n    3\n  )\nFROM `molecule` AS `t`", "difficulty": "simple"}
{"question_id": 231, "db_id": "toxicology", "question": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?", "evidence": "TR010 is the molecule id; majority of the bond found refers to MAX(COUNT(bond_type)); ", "SQL": "SELECT\n  `T`.`bond_type`\nFROM (\n  SELECT\n    `T1`.`bond_type`,\n    COUNT(`T1`.`molecule_id`)\n  FROM `bond` AS `T1`\n  WHERE\n    `T1`.`molecule_id` = 'TR010'\n  GROUP BY\n    `T1`.`bond_type`\n  ORDER BY\n    COUNT(`T1`.`molecule_id`) DESC\n  LIMIT 1\n) AS `T`", "difficulty": "challenging"}
{"question_id": 239, "db_id": "toxicology", "question": "How many connections does the atom 19 have?", "evidence": "connections refers to bond_id; atom 19 refers to atom_id like 'TR%_19';", "SQL": "SELECT\n  COUNT(`T`.`bond_id`)\nFROM `connected` AS `T`\nWHERE\n  SUBSTR(`T`.`atom_id`, -2) = '19'", "difficulty": "simple"}
{"question_id": 248, "db_id": "toxicology", "question": "What are the atoms of the triple bond with the molecule \"TR041\"?", "evidence": "TR041 is the molecule id; triple bond refers to bond_type = '#';", "SQL": "SELECT\n  `T2`.`atom_id`,\n  `T2`.`atom_id2`\nFROM `atom` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nINNER JOIN `bond` AS `T3`\n  ON `T2`.`bond_id` = `T3`.`bond_id`\nWHERE\n  `T3`.`bond_type` = '#' AND `T3`.`molecule_id` = 'TR041'", "difficulty": "simple"}
{"question_id": 253, "db_id": "toxicology", "question": "List the elements of all the triple bonds.", "evidence": "triple bond refers to bond_type = '#';", "SQL": "SELECT DISTINCT\n  `T3`.`element`\nFROM `bond` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`bond_id` = `T2`.`bond_id`\nINNER JOIN `atom` AS `T3`\n  ON `T2`.`atom_id` = `T3`.`atom_id`\nWHERE\n  `T1`.`bond_type` = '#'", "difficulty": "challenging"}
{"question_id": 255, "db_id": "toxicology", "question": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.", "evidence": "single bond refers to bond_type = '-'; label = '+' mean molecules are carcinogenic; proportion = DIVIDE(SUM(label = '+') * 100, COUNT(bond_id)) where bond_type = '-'", "SQL": "SELECT\n  ROUND(\n    CAST(COUNT(CASE WHEN `T2`.`label` = '+' THEN `T1`.`bond_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T1`.`bond_id`),\n    5\n  )\nFROM `bond` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T1`.`bond_type` = '-'", "difficulty": "moderate"}
{"question_id": 263, "db_id": "toxicology", "question": "What is the composition of element chlorine in percentage among the single bond molecules?", "evidence": "element chlorine refers to element = 'cl'; single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(element = 'cl'), COUNT(atom_id)) as percent where bond_type = '-'", "SQL": "SELECT\n  CAST(COUNT(CASE WHEN `T`.`element` = 'cl' THEN `T`.`atom_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T`.`atom_id`)\nFROM (\n  SELECT\n    `T1`.`atom_id`,\n    `T1`.`element`\n  FROM `atom` AS `T1`\n  INNER JOIN `molecule` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  INNER JOIN `bond` AS `T3`\n    ON `T2`.`molecule_id` = `T3`.`molecule_id`\n  WHERE\n    `T3`.`bond_type` = '-'\n) AS `T`", "difficulty": "challenging"}
{"question_id": 282, "db_id": "toxicology", "question": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.", "evidence": "hydrogen refers to element = 'h'; ratio = DIVIDE(SUM(element = 'h'), count(element)) where molecule_id = 'TR006' ; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic", "SQL": "WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS DECIMAL(10,2)) / NULLIF(COUNT(atom_id), 0) AS ratio, label FROM SubQuery GROUP BY label", "difficulty": "challenging"}
{"question_id": 115, "db_id": "financial", "question": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?", "evidence": "Percentage of the male clients = DIVIDE(COUNT(male clients), COUNT(clients)) * 100; Male refers to gender = 'M', A3 is the region name. A4 contains the information about inhabitants.", "SQL": "SELECT\n  CAST(SUM(`T1`.`gender` = 'M') AS DOUBLE) * 100 / COUNT(`T1`.`client_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T2`.`A3` = 'south Bohemia'\nGROUP BY\n  `T2`.`A4`\nORDER BY\n  `T2`.`A4` DESC\nLIMIT 1", "difficulty": "challenging"}
