{
    "0": "SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND T1.Price > 29.00 AND T2.Date LIKE '2012-08%'\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT date_received FROM income WHERE link_to_member IN ( SELECT member_id FROM member WHERE first_name = \"Connor\" AND last_name = \"Hilton\" )\t----- bird -----\tstudent_club",
    "2": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium' AND T2.source = 'Student_Club'\t----- bird -----\tstudent_club",
    "3": "SELECT CAST(SUM(CASE WHEN Birthday > '1930-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "4": "SELECT T2.ID, T2.SEX, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.LDH > 250\t----- bird -----\tthrombosis_prediction",
    "5": "SELECT p.ID, (strftime('%J', 'now') - strftime('%J', p.Birthday)) / 365 AS age FROM Patient p JOIN Laboratory l ON p.ID = l.ID GROUP BY p.ID HAVING COUNT(CASE WHEN l.HCT > 40 THEN 1 END) >= 2\t----- bird -----\tthrombosis_prediction",
    "6": "SQL_NOT_GENERATED\t----- bird -----\tthrombosis_prediction",
    "7": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "8": "SELECT circuitRef FROM circuits WHERE LOWER(name) = \"marina bay street circuit\"\t----- bird -----\tformula_1",
    "9": "SELECT T1.name, MIN(T2.milliseconds) AS lap_record FROM circuits AS T1 JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T1.country = 'Italy' GROUP BY T1.name ORDER BY MIN(T2.milliseconds) ASC\t----- bird -----\tformula_1",
    "10": "SELECT T1.colour, COUNT(T2.eye_colour_id) AS eye_color_count FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics' GROUP BY T1.colour ORDER BY eye_color_count DESC\t----- bird -----\tsuperhero",
    "11": "SELECT AVG(s.weight_kg) FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female'\t----- bird -----\tsuperhero",
    "12": "SELECT superhero_name FROM superhero WHERE eye_colour_id = 2 AND hair_colour_id = 4\t----- bird -----\tsuperhero",
    "13": "SELECT T2.gender FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "14": "SELECT CASE WHEN Reputation > (SELECT Reputation FROM users WHERE DisplayName = 'Jarrod Dixon') THEN 'Harlan' ELSE 'Jarrod Dixon' END AS HigherReputationUser FROM users WHERE DisplayName = 'Harlan'\t----- bird -----\tcodebase_community",
    "15": "SELECT T1.DisplayName FROM users AS T1 WHERE EXISTS ( SELECT 1 FROM comments AS T2 WHERE T1.Id = T2.UserId AND T2.Text = 'thank you user93!' )\t----- bird -----\tcodebase_community",
    "16": "SELECT AVG(T1.UpVotes) AS avg_up_votes, AVG(T2.Age) AS avg_age FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId GROUP BY T2.OwnerUserId HAVING COUNT(T2.Id) > 10\t----- bird -----\tcodebase_community",
    "17": "SELECT SUM(T1.ViewCount) AS \"Total Views\", T2.DisplayName AS \"Last Editor\" FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets' GROUP BY T2.DisplayName\t----- bird -----\tcodebase_community",
    "18": "SELECT T1.name, T1.rarity FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'gladiator' AND T2.status = 'banned' AND T1.rarity ='mythic'\t----- bird -----\tcard_games",
    "19": "SELECT CAST(SUM(CASE WHEN isTextless = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards WHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "20": "SELECT COUNT(*) FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Portuguese (Brazil)' AND T1.block = 'Commander'\t----- bird -----\tcard_games",
    "21": "SELECT * FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "22": "SELECT translation FROM set_translations WHERE setCode = '8ED' AND language = 'Simplified Chinese'\t----- bird -----\tcard_games",
    "23": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor\\'s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "24": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = 'HOU'\t----- bird -----\tcard_games",
    "25": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "26": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "27": "SELECT CAST(SUM(CASE WHEN T1.element = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = 'double'\t----- bird -----\ttoxicology",
    "28": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = 'double'\t----- bird -----\ttoxicology",
    "29": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'H' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "30": "SELECT bond_type FROM bond WHERE bond_id = ( SELECT bond_id FROM connected WHERE (atom_id = 'TR004_8' AND atom_id2 = 'TR004_20') OR (atom_id = 'TR004_20' AND atom_id2 = 'TR004_8') )\t----- bird -----\ttoxicology",
    "31": "SELECT element FROM atom WHERE molecule_id = 'TR000' GROUP BY element ORDER BY COUNT(element) DESC, element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "32": "SELECT CAST(SUM(CASE WHEN label = 'carcinogenic' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM molecule\t----- bird -----\ttoxicology",
    "33": "SELECT T1.bond_type, COUNT(T1.bond_type) AS num_bonds, CASE WHEN T2.label = 'carcinogenic' THEN 'yes' ELSE 'no' END AS is_carcinogenic FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR010' GROUP BY T1.bond_type ORDER BY num_bonds DESC LIMIT 1\t----- bird -----\ttoxicology",
    "34": "The query you provided is correct and should give the desired result. It counts the number of rows in the `connected` table where either `atom_id` or `atom_id2` is '19', effectively counting the number of connections for the atom with id '19'.\n\nHowever, to make the query more robust and avoid potential issues with data types, you may want to consider adding a filter to ensure that the `atom_id` and `atom_id2` columns are not null:\t----- bird -----\ttoxicology",
    "35": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.bond_type = 'triple' AND T3.label = 'TR041'\t----- bird -----\ttoxicology",
    "36": "SELECT CAST(SUM(CASE WHEN T1.bond_type = 'Single' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'Carcinogenic'\t----- bird -----\ttoxicology",
    "37": "SELECT T2.element, T4.element FROM bond AS T1 INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id INNER JOIN atom AS T4 ON T3.atom_id2 = T4.atom_id WHERE T1.bond_type = 'triple'\t----- bird -----\ttoxicology",
    "38": "SELECT CAST(SUM(CASE WHEN T2.element = 'Cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type ='single' AND T1.element = 'Cl'\t----- bird -----\ttoxicology",
    "39": "SELECT COUNT(CASE WHEN T1.element = 'Hydrogen' THEN 1 ELSE NULL END) * 1.0 / COUNT(T1.element) AS ratio, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "40": "SELECT CAST(SUM(CASE WHEN T2.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.client_id) FROM district AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender IS NOT NULL AND T1.A2 = 'Jiho ORDER BY T1.A8 DESC LIMIT 1\t----- bird -----\tfinancial"
}